Option: Command Shell

Test Step 1:
(1) Run ./myprogram < ./testhw
    You will see that it prints
    Hello World!
    Program was successful
    which is correct because testhw prints the first line of text and then main returns EXIT_SUCCESS, which is code 0.

(2) Run ./myprogram < ./testfailhw
    You will see that it prints
    Hello World! (but somehow failed)
    Program failed with code 1
    which is correct because testfailhw prints the first line of text and then main returns EXIT_FAILURE, which is code 1.

(3) Run ./myprogram < ./testfail
    You will see that it prints
    A failure.
    Program failed with code 2
    which is correct because testfail prints the first line of text and then it exits with code 2.

(4) Run ./myprogram < exit
    You will see that the shell exits, which is correct because the shell should exit if user types that command.

(5) Run ./myprogram < ctrl-d
    You will see that the shell exits, which is correct because the shell should exit if it encountered EOF, which is typed in ctrl-d.

(6) Run ./myprogram < ./testsig1
    You will see that it prints
    Sending signal 5.
    Terminated by signal 5
    which is correct because testsig1 prints the first line of text and then it raises a signal 5.
    
(7) Run ./myprogram < ./testsig2
    You will see that it prints
    Sending signal 15.
    Terminated by signal 15
    which is correct because testsig1 prints the first line of text and then it raises a signal SIGTERM, which is 15.

(8) Run ./myprogram < ./test
    You will see that it prints
    ./test: command not found
    Program failed with code 1
    which is correct because there is no such thing to execute, so the child process exits with failure.
